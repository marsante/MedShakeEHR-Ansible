---
# Playbook Vars
user: vagrant
domain: msehr.local

# MedShakeEHR Vars
timezone: "Europe/Paris"
msehrPath: "/home/ehr"

msehr_package: ['acl','curl','dcmtk','ghostscript','git','grub','imagemagick','ntp','pdftk','wget']

msehr_base_repo_url: "https://codeload.github.com/MedShake/MedShakeEHR-base/tar.gz/refs/tags/"
# MSEHR version to get
msehr_base_release: "7.1.1"
# sha256 check sum for the getted file (integrity check for the downloaded file)
msehr_base_checksum: "sha256:8f13f4f3d6e3de6c9d5e3c9de52dd3683909067d0b01c60d6cbf32e530526a2d"

# generate the self signed certificate for medshake web access
create_self_signed_cert: true
countryName: FR
localityName: Paris
organizationName: Dr Strange
emailAdress: email@domain.tld

orthancUser: user
orthancPswd: orthancPswd

# dev-sec.os-hardening Vars
os_desktop_enable: false
os_auth_pw_max_age: 9999
# Do not delete the following line or otherwise the playbook will fail
# at task 'create a combined sysctl-dict if overwrites are defined'
sysctl_overwrite:

# dev-sec.ssh-hardening Vars
ssh_host_key_files: ['/etc/ssh/ssh_host_ed25519_key']
ssh_authorized_keys_file: ''

# ports on which ssh-server should listen
ssh_server_ports: ['22']            # sshd

# port to which ssh-client should connect
ssh_client_port: '22'               # ssh

# one or more ip addresses, to which ssh-server should listen to. Default is empty, but should be configured for security reasons!
ssh_listen_to: ['0.0.0.0']          # sshd

# Specifies the host key algorithms that the server offers
ssh_host_key_algorithms: []         # sshd

ssh_permit_root_login: without-password

# Vars geerlingguy.firewall
firewall_allowed_tcp_ports:
  - "22"
  - "80"
  - "443"
  
# jnv.unattended-upgrades Vars
unattended_remove_unused_dependencies: true


# geerlingguy.apache Vars
apache_enablerepo: ""

apache_listen_ip: "*"
apache_listen_port: 80
apache_listen_port_ssl: 443

apache_create_vhosts: false
#apache_vhosts_filename: "vhosts.conf"
#apache_vhosts_template: "vhosts.conf.j2"

# On Debian/Ubuntu, a default virtualhost is included in Apache's configuration.
# Set this to `true` to remove that default.
apache_remove_default_vhost: true

#
# Apache config for MedShakeEHR is now managed by MedShakeEHR role
# (need custom template to restrict acces for VPN only)
#apache_vhosts:
  ## Additional properties:
  ## 'serveradmin, serveralias, allow_override, options, extra_parameters'.
  #- servername: "msehr.local"
    #documentroot: "/home/ehr/public_html/"

#apache_vhosts_ssl:
#  Additional properties:
#  'serveradmin, serveralias, allow_override, options, extra_parameters'.
  #- servername: "msehr.local"
    #documentroot: "/home/ehr/public_html/"
    #certificate_file: "/etc/easyrsa/ca_medshake/pki/issued/apache.crt"
    #certificate_key_file: "/etc/easyrsa/ca_medshake/pki/private/apache.key"
##   # Optional.
##   certificate_chain_file: "/path/to/certificate_chain.crt"

apache_ignore_missing_ssl_certificate: true

# Only used on Debian/Ubuntu.
apache_mods_enabled:
  - rewrite.load
  - headers.load
  - ssl.load
  - usertrack.load
apache_mods_disabled: []


# geerlingguy.php Vars
# Pass in a comma-separated list of repos to use (e.g. "remi,epel"). Used only
# for RHEL/CentOS.
php_enablerepo: ""

php_packages: ['php', 'php-gd', 'php-intl', 'php-curl', 'php-zip', 'php-xml', 'php-imagick', 'php-imap','php-mbstring', 'php-soap', 'php-mysql', 'php-json', 'php-yaml', 'php-gnupg']

# Default PHP version to install on Debian-based OSes (OS-specific).
# php_default_version_debian: ""

# PHP package state; use 'present' to make sure it's installed, or 'latest' if
# you want to upgrade or switch versions using a new repo.
php_packages_state: present

# Whether to install recommended packages. Used only for Debian/Ubuntu.
php_install_recommends: true

# Set this to false if you're not using PHP with Apache/Nginx/etc.
php_enable_webserver: true

# PHP-FPM configuration.
php_enable_php_fpm: false

# OpCache settings.
php_opcache_zend_extension: "opcache.so"
php_opcache_enable: "0"

# APCu settings.
php_enable_apc: false

# If this is set to false, none of the following options will have any effect.
# Any and all changes to /etc/php.ini will be your responsibility.
php_use_managed_ini: true

php_max_input_vars: "20000"
php_upload_max_filesize: "64M"
php_post_max_size: "32M"
php_date_timezone: "Europe/Paris"


# geerlingguy.mysql Vars

# Set this to the user ansible is logging in as - should have root
# or sudo access
mysql_user_home: /home/vagrant
mysql_user_name: vagrant
mysql_user_password: root

# The default root user installed by mysql - almost always root
mysql_root_home: /root
mysql_root_username: root
mysql_root_password: root

# Set this to `true` to forcibly update the root password.
mysql_root_password_update: false
mysql_user_password_update: false

mysql_enabled_on_startup: true

# Whether my.cnf should be updated on every run.
overwrite_global_mycnf: true

# Pass in a comma-separated list of repos to use (e.g. "remi,epel"). Used only
# for RedHat systems (and derivatives).
mysql_enablerepo: ""


mysql_python_package_debian: python3-mysqldb

# Databases.
mysql_databases:
   - name: medshakeehr
     collation: utf8_general_ci
     encoding: utf8
     replicate: 1

mysql_users:
  - name: medshakeehr
    host: localhost
    # /!\ REPLACE THIS WITH YOUR OWN PASSWORD
    password: secret
    priv: "medshakeehr.*:ALL"

#
# EasyRsa Configuration
#

# This enable the service to send warn mail when a certificate will expire.
# If you enable this you will ensure your system is able to send email with
# send mail (with a tool like msmtp-mta).
easyrsa_alert_renew_service: false
# Name of the CA for MedShake
# Pass for CA private key
# /!\ REPLACE THIS WITH YOUR OWN PASSWORD
easyrsa_ca_pass: "secret"

#
# Openvpn configuration
#
# IP of OpenVPN Server, configure before play the role for generate good config file
openvpn_remote: 
# VPN network
openvpn_network: "10.42.42.0"
# VPN netmask
openvpn_netmask: "255.255.255.0"
# List of VPN client
# For each client :
# - set a name (only alpha numeric characters with no space)
# - set a pass (for the private key of the certificate)
# - set a ip (for ip of client in the vpn, must be in vpn network)
# - if the client certificate is revoked add 'revoked: true'
clients_medshake:
  - name: drstrange
    pass: 'secret'
    ip: '10.42.42.10'
#   renew: false            # disable client certificate renew when re-play the playbook (occurs only when certificate is expired)
#   revoked: true           # revoke the EasyRSA certificate for the client (avoid it to connect to the VPN)
  - name: drjekyll
    pass: 'secret'
    ip: '10.42.42.11'
# This is the iface where the vpn server is listening
# (used to get his ip quickly when test with Vagrant, for production usage use
# openvpn_remote)
exposed_iface: eth0
# Set "remote" for config generated for OpenVPN clients
#openvpn_remote: xxx.xxx.xxx.xxx

# If is true, MedShakeEHR will only accessible by the VPN network
# Is greatly recommended to keep this at 'true' if the MedShake instance
# is accessible by several client (not only by the post which host the
# instance).
only_vpn_access: true
